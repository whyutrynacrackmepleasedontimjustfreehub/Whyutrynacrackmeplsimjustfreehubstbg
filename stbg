-- Elastic Hub Executed 
print("// Elastic Hub Executed \\")

-- Load the library
local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait -- Only returns if the GUI has not been terminated. For 'while Wait() do' loops

-- Declare necessary variables
local speedwalking = 175 -- Default walking speed
local tpwalking = true -- Default walking state

-- Create the GUI window and tabs
local PepsisWorld = library:CreateWindow({
    Name = "Elastic Hub (STBG)",
    Themeable = {}
})

local GeneralTab = PepsisWorld:CreateTab({
    Name = "General"
})

local MainSection = GeneralTab:CreateSection({
    Name = "Main"
})

local MiscTab = PepsisWorld:CreateTab({
    Name = "Misc"
})

local MiscSection = MiscTab:CreateSection({
    Name = "Misc"
})

local TESTER = GeneralTab:CreateSection({
    Name = "BETA TESTER"
})

local AddonSection = GeneralTab:CreateSection({
    Name = "Addon",
    Side = "Right"  -- Placing AddonSection on the right side of the GUI
})

-- Add buttons for creating part and teleporting to part
AddonSection:AddButton({
    Name = "Create Part",
    Callback = function(value)
        local part = Instance.new("Part")
        part.Size = Vector3.new(300, 1, 300)
        part.Position = Vector3.new(289.685669, 597.858826, 598.951111)
        part.CFrame = CFrame.new(289.685669, 597.858826, 598.951111, 0.29345116, 4.00540978e-09, 0.955974042, -1.47396359e-10, 1, -4.14462731e-09, -0.955974042, 1.0753386e-09, 0.29345116)
        part.Anchored = true
        part.Parent = game.Workspace
    end
})

AddonSection:AddButton({
    Name = "TP To Part",
    Keybind = 1,
    Callback = function(value)
        local savepoint = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(289.685669, 597.858826, 598.951111, 0.29345116, 4.00540978e-09, 0.955974042, -1.47396359e-10, 1, -4.14462731e-09, -0.955974042, 1.0753386e-09, 0.29345116)
        wait(2)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savepoint
    end 
})

-- Add Button for VOID GUI
TESTER:AddButton({
    Name = "VOID GUI (Cr.ItsLouisPlayz)",
    Callback = function(value)
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Elasticnoob/Void/main/Void%20stealing"))() 
    end
})

TESTER:AddButton({
    Name = "Tp To Spot Kill All",
    Callback = function(value)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(333.766327, 439.510559, 475.916077, 0.894089282, 6.90567248e-08, 0.447888762, -9.45817789e-08, 1, 3.46242857e-08, -0.447888762, -7.33193133e-08, 0.894089282)
    end
})

TESTER:AddButton({
    Name = "Jail in atom",
    Callback = function(value)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1064.5376, 153.16777, 23007.7812, 1, 0, 0, 0, 1, 0, 0, 0, 1)
    end
})

TESTER:AddButton({
    Name = "Domain Saitama",
    Callback = function(value)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-64.2775421, 39.7636375, 20333.8164, -0.917966723, 0.00943596568, 0.396545619, 3.10819596e-05, 0.999718726, -0.0237167664, -0.396657854, -0.021758873, -0.917708755)
    end
})

-- Add Button for Sonic Bring All
TESTER:AddButton({
    Name = "Sonic Bring All",
    Callback = function(value)
        wait()
        local args = {
            [1] = {
                ["Goal"] = "Console Move",
                ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:WaitForChild("Scatter")
            }
        }
        game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
        wait(0.7)
        local players = game:GetService("Players"):GetPlayers()
        local savepoint = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        for _, player in ipairs(players) do
            if player ~= game.Players.LocalPlayer then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                wait(0.2)
            end
        end
        wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savepoint
    end
})

-- Add Button for Brutal Demon Bring all(Ulti)
TESTER:AddButton({
    Name = "Brutal Demon Bring all(Ulti)",    
    Callback = function(value)
        wait()
        local args = {
            [1] = {
                ["Goal"] = "Console Move",
                ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:WaitForChild("Savage Tornado")
            }
        }
        game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
        wait(0.9)
        local players = game:GetService("Players"):GetPlayers()
        local savepoint = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        for _, player in ipairs(players) do
            if player ~= game.Players.LocalPlayer then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                wait(0.1)
            end
        end
        wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savepoint
    end
})

-- Populate Playerslist
local Playerslist = {}
for i, v in pairs(game:GetService("Players"):GetChildren()) do
    table.insert(Playerslist, v.Name)
end

-- Add Dropdown for Select Player
MainSection:AddDropdown({
    Name = "Select Player",
    Value = "",
    List = Playerslist,
    Callback = function(t)
        _G.SelectPly = t
    end
})

-- Add Button for Refresh Player
MainSection:AddButton({
    Name = "Refresh Player",
    Callback = function()
        Playerslist = {}
        SelectedPly:Clear()
        for i, v in pairs(game:GetService("Players"):GetChildren()) do
            SelectedPly:Add(v.Name)
        end
    end
})

-- Add Button for Teleport To Player
MainSection:AddButton({
    Name = "Teleport To Player",
    Callback = function(value)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame
    end
})

-- Add Button for Auto Farm Player
MainSection:AddButton({
    Name = "Auto Kill Garou (Skill 1)",
    Callback = function(value)
        local savepoint = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        local targetPlayer = game.Players[_G.SelectPly]
        if targetPlayer then
            local targetPosition = targetPlayer.Character and targetPlayer.Character.HumanoidRootPart.Position
            if targetPosition then
                if not game.Players[_G.SelectPly].Character:FindFirstChild("Freeze") then
                    for i = 1, 6 do
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                        wait()
                    end
                    local args = {
                        [1] = {
                            ["Goal"] = "Console Move",
                            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:WaitForChild("Flowing Water")
                        }
                    }
                    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
                    for i = 1, 3 do
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                        wait(.1)
                    end
                end
                wait(0.6)
                if game.Players[_G.SelectPly].Character:FindFirstChild("Freeze") then
                    local TweenService = game:GetService("TweenService")
                    local Tw = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out,0,false,0), 
                    {CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-500,1000)}):Play()
                    wait(2)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savepoint
                end
            end
        end
    end
})

-- Add Toggle Button for Spectate Player
MainSection:AddToggle({
    Name = "Spectate Player",
    Flag = "Spectate Player",
    Value = SpectatePlys,
    Callback = function(value)
        SpectatePlys = value
        local selectedPlayer = game.Players[_G.SelectPly]
        if selectedPlayer then
            repeat
                wait(0.1)
                game:GetService("Workspace").Camera.CameraSubject = selectedPlayer.Character.Humanoid
            until not SpectatePlys
            game:GetService("Workspace").Camera.CameraSubject = game:GetService("Players").LocalPlayer.Character.Humanoid
        else
            print("No player selected for spectating.")
        end
    end
})

-- Add Button for SAFE POINT
MainSection:AddButton({
    Name = "SAFE POINT",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(330.184937, 671.104004, 445.821259, 0.93102932, 1.17987888e-07, 0.364944339, -1.00160534e-07, 1, -6.77788066e-08, -0.364944339, 2.65510369e-08, 0.93102932)
    end
})

-- Add Button for Rejoin
MiscSection:AddButton({
    Name = "Rejoin",
    Callback = function(value)
        local ts = game:GetService("TeleportService")
        local p = game:GetService("Players").LocalPlayer
        ts:Teleport(game.PlaceId, p)
    end
})

-- Add Button for Hop
MiscSection:AddButton({
    Name = "Hop",
    Callback = function(value)
        local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua"))()
        module:Teleport(game.PlaceId)
    end
})

-- Function to check if a string is a number or 'inf'
local function isNumber(str)
    return tonumber(str) ~= nil or str == 'inf'
end

-- Speedwalking function
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local speaker = Players.LocalPlayer
local hb = RunService.Heartbeat

local FarmingSection = GeneralTab:CreateSection({
    Name = "Character"
})

-- Add Slider for setting the walk speed
FarmingSection:AddSlider({
    Name = "Setwalkspeed",
    Value = speedwalking,
    Min = 0,
    Max = 200,
    Format = function(Value)
        if Value == 0 then
            return "Speed 0"
        else
            return "Ur speed now: " .. tostring(Value)
        end
    end,
    Callback = function(value)
        speedwalking = value
    end
})

-- Main loop for speedwalking
while tpwalking do
    local chr = speaker.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    if chr and hum and hum.Parent then
        local delta = hb:Wait()
        if hum.MoveDirection.Magnitude > 0 then
            if isNumber(speedwalking) then
                chr:TranslateBy(hum.MoveDirection * tonumber(speedwalking) * delta * 10)
            else
                chr:TranslateBy(hum.MoveDirection * delta * 10)
            end
        end
    end
end
