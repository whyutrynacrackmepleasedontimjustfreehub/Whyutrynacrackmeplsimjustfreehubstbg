-- Elastic Hub Executed 
print("// Elastic Hub Executed \\")

local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait -- Only returns if the GUI has not been terminated. For 'while Wait() do' loops

local PepsisWorld = library:CreateWindow({
    Name = "Elastic Hub (STBG)",
    Themeable = {}
})

local GeneralTab = PepsisWorld:CreateTab({
    Name = "General"
})

local MainSection = GeneralTab:CreateSection({
    Name = "Main"
})

local MiscTab = PepsisWorld:CreateTab({
    Name = "Misc"
})

local MiscSection = MiscTab:CreateSection({
    Name = "Misc"
})

local TESTER = GeneralTab:CreateSection({
    Name = "BETA TESTER"
})

local TESTER = GeneralTab:CreateSection({
    Name = "BETA TESTER"
})

local AddonSection = GeneralTab:CreateSection({
    Name = "Addon"
})

AddonSection:AddButton({
    Name = "Create Part",
    Callback = function(value)
       local part = Instance.new("Part")
part.Size = Vector3.new(500, 1, 500)
part.Position = Vector3.new(441.84729, -157.423279, 1537.13733)
part.CFrame = CFrame.new(441.84729, -157.423279, 1537.13733, -0.933220506, -2.41293527e-08, 0.35930416, -9.23857701e-09, 1, 4.31604334e-08, -0.35930416, 3.69587418e-08, -0.933220506)
part.Anchored = true
part.Parent = game.Workspace -- Change 'game.Workspace' to the desired parent if necessary

    end
})

AddonSection:AddButton({
    Name = "TP To Part",
    Callback = function(value)
     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(435.829163, -153.923309, 1540.0575, 0.928788066, 1.23670718e-08, -0.37061128, 1.86642168e-09, 1, 3.80468244e-08, 0.37061128, -3.6029153e-08, 0.928788066)


    end
})

-- Add Button for VOID GUI
TESTER:AddButton({
    Name = "VOID GUI (Cr.ItsLouisPlayz)",
    Callback = function(value)
       loadstring(game:HttpGet("https://raw.githubusercontent.com/Elasticnoob/Void/main/Void%20stealing"))() 
    end
})

-- Add Button for Sonic Bring All
TESTER:AddButton({
    Name = "Sonic Bring All",
    
    Callback = function(value)
    wait()
        local args = {
            [1] = {
                ["Goal"] = "Console Move",
                ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:WaitForChild("Scatter")
            }
        }
        game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
wait(0.7)

        local players = game:GetService("Players"):GetPlayers()
        local savepoint = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

        for _, player in ipairs(players) do
            if player ~= game.Players.LocalPlayer then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                wait(0.2)
            end
        end

      
        wait()
        -- Restore to the original position
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savepoint
    end
})

TESTER:AddButton({
    Name = "Brutal Demon Bring all(Ulti)",
    
    Callback = function(value)
    wait()
        local args = {
            [1] = {
                ["Goal"] = "Console Move",
                ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:WaitForChild("Savage Tornado")
            }
        }
        game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
wait(0.7)

        local players = game:GetService("Players"):GetPlayers()
        local savepoint = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

        for _, player in ipairs(players) do
            if player ~= game.Players.LocalPlayer then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                wait(0.2)
            end
        end

      
        wait()
        -- Restore to the original position
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savepoint
    end
})

-- Initialize Playerslist
local Playerslist = {}

-- Populate Playerslist
for i, v in pairs(game:GetService("Players"):GetChildren()) do
    table.insert(Playerslist, v.Name)
end

-- Add Dropdown for Select Player
MainSection:AddDropdown({
    Name = "Select Player",
    Value = "",
    List = Playerslist,
    Callback = function(t)
        _G.SelectPly = t
    end
})

-- Add Button for Refresh Player
MainSection:AddButton({
    Name = "Refresh Player",
    Callback = function()
        Playerslist = {}
        SelectedPly:Clear()
        for i, v in pairs(game:GetService("Players"):GetChildren()) do
            SelectedPly:Add(v.Name)
        end
    end
})

-- Add Button for Teleport To Player
MainSection:AddButton({
    Name = "Teleport To Player",
    Callback = function(value)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame
    end
})

-- Add Button for Auto Farm Player
MainSection:AddButton({
    Name = "Auto Kill Garou (Skill 1)",
    Callback = function(value)

            local savepoint = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

            local targetPlayer = game.Players[_G.SelectPly]
                        if targetPlayer then
                            local targetPosition = targetPlayer.Character and targetPlayer.Character.HumanoidRootPart.Position
                            if targetPosition then
            if not game.Players[_G.SelectPly].Character:FindFirstChild("Freeze") then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait()
                 local args = {
                    [1] = {
                        ["Goal"] = "Console Move",
                        ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:WaitForChild("Flowing Water")
                    }
                }
                
                game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait(.1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait(.1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[_G.SelectPly].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                                wait(.1)
end
                wait(0.6)
            if game.Players[_G.SelectPly].Character:FindFirstChild("Freeze") then
                      local TweenService = game:GetService("TweenService")
                    local Tw = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out,0,false,0), 
                    {CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-500,1000)}):Play()
                    wait(2)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savepoint
                    end
                    end
                    end
        
		end
	
	})

-- Add Toggle Button for Spectate Player
MainSection:AddToggle({
    Name = "Spectate Player",
    Flag = "Spectate Player",
    Value = SpectatePlys,
    Callback = function(value)
        SpectatePlys = value
        local selectedPlayer = game.Players[_G.SelectPly]

        if selectedPlayer then
            repeat
                wait(0.1)
                game:GetService("Workspace").Camera.CameraSubject = selectedPlayer.Character.Humanoid
            until not SpectatePlys

            game:GetService("Workspace").Camera.CameraSubject = game:GetService("Players").LocalPlayer.Character.Humanoid
        else
            print("No player selected for spectating.")
        end
    end
})

-- Add Button for SAFE POINT
MainSection:AddButton({
    Name = "SAFE POINT",
    Callback = function()
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(330.184937, 671.104004, 445.821259, 0.93102932, 1.17987888e-07, 0.364944339, -1.00160534e-07, 1, -6.77788066e-08, -0.364944339, 2.65510369e-08, 0.93102932)
        end
})

------------MISC-------------
MiscSection:AddButton({
    Name = "Rejoin",
    Callback = function(value)
       local ts = game:GetService("TeleportService")

local p = game:GetService("Players").LocalPlayer
ts:Teleport(game.PlaceId, p)
    end
})

MiscSection:AddButton({
    Name = "Hop",
    Callback = function(value)
local module = loadstring(game:HttpGet"https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua")()

module:Teleport(game.PlaceId)
    end
})
